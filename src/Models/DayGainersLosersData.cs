namespace OoplesFinance.YahooFinanceAPI.Models;

public record CriteriaMeta(
        [property: JsonProperty("size")] int? Size,
        [property: JsonProperty("offset")] int? Offset,
        [property: JsonProperty("sortField")] string SortField,
        [property: JsonProperty("sortType")] string SortType,
        [property: JsonProperty("quoteType")] string QuoteType,
        [property: JsonProperty("criteria")] IReadOnlyList<Criterion> Criteria,
        [property: JsonProperty("topOperator")] string TopOperator
    );

public record Criterion(
    [property: JsonProperty("field")] string Field,
    [property: JsonProperty("operators")] IReadOnlyList<string> Operators,
    [property: JsonProperty("values")] IReadOnlyList<double?> Values,
    [property: JsonProperty("labelsSelected")] IReadOnlyList<int?> LabelsSelected,
    [property: JsonProperty("dependentValues")] IReadOnlyList<object> DependentValues
);

public record DayGainersLosersFinance(
    [property: JsonProperty("result")] IReadOnlyList<DayGainersLosersResult> Results,
    [property: JsonProperty("error")] object Error
);

public record DayGainersLosersQuote(
    [property: JsonProperty("language")] string Language,
    [property: JsonProperty("region")] string Region,
    [property: JsonProperty("quoteType")] string QuoteType,
    [property: JsonProperty("typeDisp")] string TypeDisp,
    [property: JsonProperty("quoteSourceName")] string QuoteSourceName,
    [property: JsonProperty("triggerable")] bool? Triggerable,
    [property: JsonProperty("customPriceAlertConfidence")] string CustomPriceAlertConfidence,
    [property: JsonProperty("forwardPE")] double? ForwardPE,
    [property: JsonProperty("priceToBook")] double? PriceToBook,
    [property: JsonProperty("sourceInterval")] int? SourceInterval,
    [property: JsonProperty("exchangeDataDelayedBy")] int? ExchangeDataDelayedBy,
    [property: JsonProperty("exchangeTimezoneName")] string ExchangeTimezoneName,
    [property: JsonProperty("exchangeTimezoneShortName")] string ExchangeTimezoneShortName,
    [property: JsonProperty("gmtOffSetMilliseconds")] int? GmtOffSetMilliseconds,
    [property: JsonProperty("ipoExpectedDate")] string IpoExpectedDate,
    [property: JsonProperty("esgPopulated")] bool? EsgPopulated,
    [property: JsonProperty("tradeable")] bool? Tradeable,
    [property: JsonProperty("cryptoTradeable")] bool? CryptoTradeable,
    [property: JsonProperty("regularMarketChangePercent")] double? RegularMarketChangePercent,
    [property: JsonProperty("currency")] string Currency,
    [property: JsonProperty("fullExchangeName")] string FullExchangeName,
    [property: JsonProperty("longName")] string LongName,
    [property: JsonProperty("financialCurrency")] string FinancialCurrency,
    [property: JsonProperty("regularMarketOpen")] double? RegularMarketOpen,
    [property: JsonProperty("averageDailyVolume3Month")] int? AverageDailyVolume3Month,
    [property: JsonProperty("averageDailyVolume10Day")] int? AverageDailyVolume10Day,
    [property: JsonProperty("fiftyTwoWeekLowChange")] double? FiftyTwoWeekLowChange,
    [property: JsonProperty("fiftyTwoWeekLowChangePercent")] double? FiftyTwoWeekLowChangePercent,
    [property: JsonProperty("fiftyTwoWeekRange")] string FiftyTwoWeekRange,
    [property: JsonProperty("fiftyTwoWeekHighChange")] double? FiftyTwoWeekHighChange,
    [property: JsonProperty("fiftyTwoWeekHighChangePercent")] double? FiftyTwoWeekHighChangePercent,
    [property: JsonProperty("earningsTimestamp")] int? EarningsTimestamp,
    [property: JsonProperty("earningsTimestampStart")] int? EarningsTimestampStart,
    [property: JsonProperty("earningsTimestampEnd")] int? EarningsTimestampEnd,
    [property: JsonProperty("trailingAnnualDividendRate")] double? TrailingAnnualDividendRate,
    [property: JsonProperty("trailingAnnualDividendYield")] double? TrailingAnnualDividendYield,
    [property: JsonProperty("marketState")] string MarketState,
    [property: JsonProperty("epsTrailingTwelveMonths")] double? EpsTrailingTwelveMonths,
    [property: JsonProperty("epsForward")] double? EpsForward,
    [property: JsonProperty("epsCurrentYear")] double? EpsCurrentYear,
    [property: JsonProperty("priceEpsCurrentYear")] double? PriceEpsCurrentYear,
    [property: JsonProperty("sharesOutstanding")] object SharesOutstanding,
    [property: JsonProperty("bookValue")] double? BookValue,
    [property: JsonProperty("fiftyDayAverage")] double? FiftyDayAverage,
    [property: JsonProperty("fiftyDayAverageChange")] double? FiftyDayAverageChange,
    [property: JsonProperty("fiftyDayAverageChangePercent")] double? FiftyDayAverageChangePercent,
    [property: JsonProperty("twoHundredDayAverage")] double? TwoHundredDayAverage,
    [property: JsonProperty("twoHundredDayAverageChange")] double? TwoHundredDayAverageChange,
    [property: JsonProperty("twoHundredDayAverageChangePercent")] double? TwoHundredDayAverageChangePercent,
    [property: JsonProperty("marketCap")] object MarketCap,
    [property: JsonProperty("averageAnalystRating")] string AverageAnalystRating,
    [property: JsonProperty("firstTradeDateMilliseconds")] object FirstTradeDateMilliseconds,
    [property: JsonProperty("priceHint")] int? PriceHint,
    [property: JsonProperty("postMarketChangePercent")] double? PostMarketChangePercent,
    [property: JsonProperty("postMarketTime")] int? PostMarketTime,
    [property: JsonProperty("postMarketPrice")] double? PostMarketPrice,
    [property: JsonProperty("postMarketChange")] double? PostMarketChange,
    [property: JsonProperty("regularMarketChange")] double? RegularMarketChange,
    [property: JsonProperty("regularMarketTime")] int? RegularMarketTime,
    [property: JsonProperty("regularMarketPrice")] double? RegularMarketPrice,
    [property: JsonProperty("regularMarketDayHigh")] double? RegularMarketDayHigh,
    [property: JsonProperty("regularMarketDayRange")] string RegularMarketDayRange,
    [property: JsonProperty("regularMarketDayLow")] double? RegularMarketDayLow,
    [property: JsonProperty("regularMarketVolume")] int? RegularMarketVolume,
    [property: JsonProperty("regularMarketPreviousClose")] double? RegularMarketPreviousClose,
    [property: JsonProperty("bid")] double? Bid,
    [property: JsonProperty("ask")] double? Ask,
    [property: JsonProperty("bidSize")] int? BidSize,
    [property: JsonProperty("askSize")] int? AskSize,
    [property: JsonProperty("market")] string Market,
    [property: JsonProperty("messageBoardId")] string MessageBoardId,
    [property: JsonProperty("exchange")] string Exchange,
    [property: JsonProperty("fiftyTwoWeekLow")] double? FiftyTwoWeekLow,
    [property: JsonProperty("fiftyTwoWeekHigh")] double? FiftyTwoWeekHigh,
    [property: JsonProperty("shortName")] string ShortName,
    [property: JsonProperty("displayName")] string DisplayName,
    [property: JsonProperty("symbol")] string Symbol,
    [property: JsonProperty("prevName")] string PrevName,
    [property: JsonProperty("nameChangeDate")] string NameChangeDate,
    [property: JsonProperty("dividendDate")] int? DividendDate,
    [property: JsonProperty("trailingPE")] double? TrailingPE
);

public record DayGainersLosersResult(
    [property: JsonProperty("id")] string Id,
    [property: JsonProperty("title")] string Title,
    [property: JsonProperty("description")] string Description,
    [property: JsonProperty("canonicalName")] string CanonicalName,
    [property: JsonProperty("criteriaMeta")] CriteriaMeta CriteriaMeta,
    [property: JsonProperty("rawCriteria")] string RawCriteria,
    [property: JsonProperty("start")] int? Start,
    [property: JsonProperty("count")] int? Count,
    [property: JsonProperty("total")] int? Total,
    [property: JsonProperty("quotes")] IReadOnlyList<DayGainersLosersQuote> Quotes,
    [property: JsonProperty("useRecords")] bool? UseRecords,
    [property: JsonProperty("predefinedScr")] bool? PredefinedScr,
    [property: JsonProperty("versionId")] int? VersionId,
    [property: JsonProperty("creationDate")] long? CreationDate,
    [property: JsonProperty("lastUpdated")] long? LastUpdated,
    [property: JsonProperty("isPremium")] bool? IsPremium,
    [property: JsonProperty("iconUrl")] string IconUrl
);

public record DayGainersLosersData(
    [property: JsonProperty("finance")] DayGainersLosersFinance Finance
);